var http = require('http');
var coreMapping = require('core-mapping');
var dataUtils = require('utility/dataUtils');

var runaid;
var article_uuid;
var categories;
var city;
var gps_position;
var core;

function execSolrCall(onResult) {
    /*** HTTP GET TO SOLR ****/
    var options = {
        //definisco i dati da inviare nella chiamata a SOLR            
        host: 'solr-slaves.farm-rcs.it',
        path: '/solr_repo/' + core + '/select/?q=' + article_uuid + '&version=2.2&start=0&rows=3&indent=on&wt=json',
        method: 'GET',
        headers: {
            'Content-Type': 'application/json'
        }
    };
    console.log("options.headers: " + JSON.stringify(options));
    callback = function(response) {
        var str = "";
        var jsonStr = "";
        //another chunk of data has been recieved, so append it to `str`
        response.on('data', function(chunk) {
            str += chunk;
        });
        //the whole response has been recieved, so we just print it out here
        response.on('end', function() {
            jsonStr = (JSON.parse(str));
            console.log('jsonStr: ' + jsonStr);
            onResult(jsonStr);
            return;
        });
    }
    http.request(options, callback);
}



exports.callSolr = function(valueFromBody) {
    //variables for quering SOLR
    var retRelatedArticles = [];
    runaid = encodeURIComponent(valueFromBody.runaid);
    article_uuid = encodeURIComponent(valueFromBody.article_uuid);
    categories = encodeURIComponent(valueFromBody.categories);
    city = encodeURIComponent(valueFromBody.city);
    gps_position = encodeURIComponent(valueFromBody.gps_position);

    core = coreMapping.getCore(city);
    console.log("CORE SOLR " + core);

    execSolrCall(function(result) {
        console.log("result" + result);
        retRelatedArticles = result;

    });
    return retRelatedArticles;
}