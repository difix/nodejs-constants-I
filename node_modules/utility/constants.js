//Request ROUTE Mapping
var getRecommendationPath = '/contentrecomm/:apikey/getrecommendations';
var userNavigationPath = '/contentrecomm/:apikey/usernavigation';
var userProfilePath = '/contentrecomm/:apikey/userprofile';
var setCatalogPath = '/contentrecomm/:apikey/articles';
var createTablePath = '/contentrecomm/:apikey/createtable';
var retrieveByUuidPath = '/contentrecomm/:apikey/retrievebyuuid';
var retrieveByRunaIdPath = '/malearing/:apikey/retrievebyrunaid';

//var connectionString = "DefaultEndpointsProtocol=https;AccountName=wfdvcorsmtsa01;AccountKey=/fwJcs3vDTEEYKLViHB6w9bncdmb2mveE3ZBg4m2zNq0FBZ2YPxhO7oN5masmhYQmiGCzZ4Fk78dvy/1IbZ47g==;BlobEndpoint=https://wfdvcorsmtsa01.blob.core.windows.net/;TableEndpoint=https://wfdvcorsmtsa01.table.core.windows.net/;QueueEndpoint=https://wfdvcorsmtsa01.queue.core.windows.net/;FileEndpoint=https://wfdvcorsmtsa01.file.core.windows.net/"

var connectionString = "DefaultEndpointsProtocol=https;AccountName=contentrecc;AccountKey=EkmiDC9hba9zvU3zgHB9XGj6SVdSjlh5N+5RrIombdoJlbri0nvh1sGInH8DijFf7Vvp0A5JGrtyPBX/Gr/aZw==;BlobEndpoint=https://contentrecc.blob.core.windows.net/;TableEndpoint=https://contentrecc.table.core.windows.net/;QueueEndpoint=https://contentrecc.queue.core.windows.net/;FileEndpoint=https://contentrecc.file.core.windows.net/"

var protocol = "http://";
var slrHost = "smart.corriere.it" //host used for calling SOLR

var AccountName = "devstoreaccount1";
var AccountKey = "Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==";
var TableEndPoint = "http://127.0.0.1:10002/devstoreaccount1;"

var dataInterval = "(NOW-7DAY/(DAY TO NOW/DAY))^100";

var coreNotFound = "notFound";

//Messaggi di risposta
var serviceNotAvailable = "Service actually not available - sorry";
var unsupportedMediaType = "Unsupported media type";
var methodNotAllowed = "Method not Allowed";
var erroreInDoSolrQuery = "ERRORE IN doSolrQueryForGettingInterestingTerm";
var errorOnEntityCreation = "Error on Entity Creation!!<br>Error List: ";
var allEntityCreated = "All entity created";
var entityCreated = "Entity created!";
var entityNotCreated = "Entity NOT created!";
var createdNewTable = "Created new table: ";
var tableAlreadyExists = "The table already exists: ";
var errorCreating = "Errore nel creare: ";

//Nomi tabelle
var tableNameUserNavigation = "userNavigation";
var tableNameUserProfiles = "userProfiles";
var tableNameCatalog = "catalog";



var slrPath; //host used for calling SOLR
var slrQueryOperation; //host used for calling SOLR
var slrQuery; //value to use for populate the queryStirng param 'q'
var slrCore; //value used like SolrCore where execute query
var slrResulElem; //number of results
var slrLuceneVersion; //define the lucene version
var srlStartElem; //element index from which to begin to return results
var slrIndentOptValue;
var slrJsonOptValue;
var homePath = '/';

exports.getConstant = function(costantName){
    
    switch(costantName){
       case 'getRecommendationPath':
        return getRecommendationPath;
       case 'userNavigationPath':
        return userNavigationPath;
       case 'userProfilePath':
        return userProfilePath;
       case 'setCatalogPath':
        return setCatalogPath;
       case 'createTablePath':
        return createTablePath;
       case 'retrieveByUuidPath':
        return retrieveByUuidPath;
       case 'retrieveByRunaIdPath':
        return retrieveByRunaIdPath;
       case 'connectionString':
        return connectionString;
       case 'protocol':
        return protocol;
       case 'slrHost':
        return slrHost;
       case 'AccountName':
        return AccountName;
       case 'AccountKey':
        return AccountKey;
       case 'TableEndPoint':
        return TableEndPoint;
       case 'dataInterval':
        return dataInterval;
       case 'coreNotFound':
        return coreNotFound;
       case 'serviceNotAvailable':
        return serviceNotAvailable;
       case 'unsupportedMediaType':
        return unsupportedMediaType;
       case 'methodNotAllowed':
        return methodNotAllowed;
       case 'erroreInDoSolrQuery':
        return erroreInDoSolrQuery;
       case 'errorOnEntityCreation':
        return errorOnEntityCreation;
       case 'allEntityCreated':
        return allEntityCreated;
       case 'entityCreated':
        return entityCreated;
       case 'entityNotCreated':
        return entityNotCreated;
       case 'createdNewTable':
        return createdNewTable;
       case 'tableAlreadyExists':
        return tableAlreadyExists;
       case 'errorCreating':
        return errorCreating;
       case 'tableNameUserNavigation':
        return tableNameUserNavigation;
       case 'tableNameUserProfiles':
        return tableNameUserProfiles;
       case 'tableNameCatalog':
        return tableNameCatalog;
       case 'slrPath':
        return slrPath;
       case 'slrQueryOperation':
        return slrQueryOperation;
       case 'slrQuery':
        return slrQuery;
       case 'slrCore':
        return slrCore;
       case 'slrResulElem':
        return slrResulElem;
       case 'slrLuceneVersion':
        return slrLuceneVersion;
       case 'srlStartElem':
        return srlStartElem;
       case 'slrIndentOptValue':
        return slrIndentOptValue;
       case 'slrJsonOptValue':
        return slrIndentOptValue;
       case 'homePath':
        return homePath;
    }
    
};

